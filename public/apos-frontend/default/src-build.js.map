{"version":3,"file":"src-build.js","mappings":"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","sources":["webpack://apostrophe-storybook/./apos-build/default/src-import.js","webpack://apostrophe-storybook/./node_modules/apostrophe/modules/@apostrophecms/util/ui/src/util.js","webpack://apostrophe-storybook/./node_modules/apostrophe/modules/@apostrophecms/util/ui/src/index.js","webpack://apostrophe-storybook/./node_modules/apostrophe/modules/@apostrophecms/util/ui/src/http.js","webpack://apostrophe-storybook/./node_modules/apostrophe/modules/@apostrophecms/admin-bar/ui/src/index.js","webpack://apostrophe-storybook/./node_modules/apostrophe/modules/@apostrophecms/video-widget/ui/src/index.js"],"sourcesContent":["(function() {\n    window.apos = window.apos || {};\n    var data = document.body && document.body.getAttribute('data-apos');\n    Object.assign(window.apos, JSON.parse(data || '{}'));\n    if (data) {\n      document.body.removeAttribute('data-apos');\n    }\n    if (window.apos.modules) {\n      for (const module of Object.values(window.apos.modules)) {\n        if (module.alias) {\n          window.apos[module.alias] = module;\n        }\n      }\n    }\n})();import index_0App from \"/Users/sdr/sites/apostrophe-storybook/node_modules/apostrophe/modules/@apostrophecms/util/ui/src/index.js\";\n\n\nimport index_1App from \"/Users/sdr/sites/apostrophe-storybook/node_modules/apostrophe/modules/@apostrophecms/admin-bar/ui/src/index.js\";\n\n\nimport index_2App from \"/Users/sdr/sites/apostrophe-storybook/node_modules/apostrophe/modules/@apostrophecms/video-widget/ui/src/index.js\";\n\n\n\nimport index_0Stylesheet from \"/Users/sdr/sites/apostrophe-storybook/node_modules/apostrophe/modules/@apostrophecms/image-widget/ui/src/index.scss\";index_0App();\nindex_1App();\nindex_2App();","// Adds minimal services to the apos object replacing\n// functionality widget players can't live without,\n// and provides the `runPlayers` method to run all players\n// once if not run previously.\n//\n// Also schedules that method to run automatically when\n// the DOM is ready.\n//\n// Adds apos to window if not already present.\n//\n// This is a lean, IE11-friendly implementation.\n\nexport default () => {\n\n  const apos = window.apos;\n  apos.util = {};\n\n  // emit a custom event on the specified DOM element in a cross-browser way.\n  // If `data` is present, the properties of `data` will be available on the event object\n  // in your event listeners. For events unrelated to the DOM, we often emit on\n  // `document.body` and call `addEventListener` on `document.body` elsewhere.\n  //\n  // \"Where is `apos.util.on`?\" You don't need it, use `addEventListener`, which is\n  // standard.\n\n  apos.util.emit = function(el, name, data) {\n    let event;\n    try {\n      // Modern. We can't sniff for this, we can only try it. IE11\n      // has it but it's not a constructor and throws an exception\n      event = new window.CustomEvent(name);\n    } catch (e) {\n      // bc for IE11\n      event = document.createEvent('Event');\n      event.initEvent(name, true, true);\n    }\n    apos.util.assign(event, data || {});\n    el.dispatchEvent(event);\n  };\n\n  // Fetch the cookie by the given name\n  apos.util.getCookie = function(name) {\n    const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n    return match && match[2];\n  };\n\n  // Remove a CSS class, if present.\n  // http://youmightnotneedjquery.com/\n\n  apos.util.removeClass = function(el, className) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else {\n      el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  };\n\n  // Add a CSS class, if missing.\n  // http://youmightnotneedjquery.com/\n\n  apos.util.addClass = function(el, className) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else {\n      el.className += ' ' + className;\n    }\n  };\n\n  // A wrapper for the native closest() method of DOM elements,\n  // where available, otherwise a polyfill for IE9+. Returns the\n  // closest ancestor of el that matches selector, where\n  // el itself is considered the closest possible ancestor.\n\n  apos.util.closest = function(el, selector) {\n    if (el.closest) {\n      return el.closest(selector);\n    }\n    // Polyfill per https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n    }\n    Element.prototype.closest = function(s) {\n      let el = this;\n      if (!document.documentElement.contains(el)) {\n        return null;\n      }\n      do {\n        if (el.matches(s)) {\n          return el;\n        }\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n      return null;\n    };\n    return el.closest(selector);\n  };\n\n  // Like Object.assign. Uses Object.assign where available.\n  // (Takes us back to IE9)\n\n  apos.util.assign = function(obj1, obj2 /*,  obj3... */) {\n    if (Object.assign) {\n      return Object.assign.apply(Object, arguments);\n    }\n    let i, j, keys, key;\n    for (i = 1; (i < arguments.length); i++) {\n      keys = Object.keys(arguments[i]);\n      for (j = 0; (j < keys.length); j++) {\n        key = keys[j];\n        obj1[key] = arguments[i][key];\n      }\n    }\n    return obj1;\n  };\n\n  // Map of widget players. Adding one is as simple as:\n  // window.apos.util.widgetPlayers['widget-name'] = function(el, data, options) {}\n  //\n  // Use the widget's name, like \"apostrophe-images\", NOT the name of its module.\n  //\n  // Your player receives the DOM element of the widget and the\n  // pre-parsed `data` and `options` objects associated with it,\n  // as objects. el is NOT a jQuery object, because jQuery is not pushed\n  // (we push no libraries in the lean world).\n  //\n  // Your player should add any needed javascript effects to\n  // THAT ONE WIDGET and NO OTHER. Don't worry about finding the\n  // others, we will do that for you and we guarantee only one call per widget.\n\n  apos.util.widgetPlayers = {};\n\n  // Run the given function whenever the DOM has new changes that\n  // may require attention. The passed function will be\n  // called when the DOM is ready on initial page load, and also\n  // when the main content area has been refreshed by the editor.\n  // Note that you don't need this for widgets; see widget players.\n\n  // NOTE: onReadyAndRefresh has been aliased to apos.util.onReady,\n  // which is the recommended way to call this functionality.\n  // onReadyAndRefresh will be deprecated in the next major version.\n\n  apos.util.onReadyAndRefresh = function(fn) {\n    onReady(fn);\n    // Allow Apostrophe to create the bus first\n    setTimeout(function() {\n      apos.bus && apos.bus.$on('refreshed', fn);\n    }, 0);\n    function onReady(fn) {\n      if (document.readyState !== 'loading') {\n        setTimeout(fn, 0);\n      } else if (document.addEventListener) {\n        document.addEventListener('DOMContentLoaded', fn);\n      } else {\n        document.attachEvent('onreadystatechange', function() {\n          if (document.readyState !== 'loading') {\n            fn();\n          }\n        });\n      }\n    }\n  };\n\n  // Alias for onReadyAndRefresh, the recommended way to use and document this functionality\n  apos.util.onReady = apos.util.onReadyAndRefresh.bind(apos.util.onReadyAndRefresh);\n\n  // Run all the players that haven't been run. Invoked for you at DOMready\n  // time. You may also invoke it if you just AJAXed in some content and\n  // have reason to suspect there could be widgets in there. You may pass:\n  //\n  // * Nothing at all - entire document is searched for new widgets to enhance, or\n  // * A DOM element - new widgets to enhance are found within this scope only.\n  //\n  // To register a widget player for the `apostrophe-images` widget, write:\n  //\n  // `apos.util.widgetPlayers['apostrophe-images'] = function(el, data, options) { ... }`\n  //\n  // `el` is a DOM element, not a jQuery object. Otherwise identical to\n  // traditional Apostrophe widget players. `data` contains the properties\n  // of the widget itself, `options` contains the options that were\n  // passed to it at the area level.\n  //\n  // Your player is guaranteed to run only once per widget. Hint:\n  // DON'T try to find all the widgets. DO just enhance `el`.\n  // This is a computer science principle known as \"separation of concerns.\"\n\n  apos.util.runPlayers = function(el) {\n    const players = apos.util.widgetPlayers;\n    const playerList = Object.keys(players);\n\n    for (let i = 0; i < playerList.length; i++) {\n      const playerOpts = players[playerList[i]];\n      const playerEls = (el || document).querySelectorAll(playerOpts.selector);\n\n      playerEls.forEach(function (el) {\n        if (el.aposWidgetPlayed) {\n          return;\n        }\n        // Use an actual property, not a DOM attribute or\n        // \"data\" prefix property, to avoid the problem of\n        // elements cloned from innerHTML appearing to have\n        // been played too\n        el.aposWidgetPlayed = true;\n        playerOpts.player(el);\n      });\n    }\n  };\n\n  // Schedule runPlayers to run as soon as the document is ready, and also\n  // when the page is partially refreshed by the editor.\n\n  if (!apos.bus) {\n    apos.util.onReadyAndRefresh(function() {\n      apos.util.runPlayers();\n    });\n  }\n\n  // Given an attachment field value,\n  // return the file URL. If options.size is set, return the URL for\n  // that size (one-sixth, one-third, one-half, two-thirds, full, max).\n  // full is \"full width\" (1140px), not the original.\n  //\n  // If you don't pass the options object, or options does not\n  // have a size property, you'll get the URL of the original.\n  // IMPORTANT: FOR IMAGES, THIS MAY BE A VERY LARGE FILE, NOT\n  // WHAT YOU WANT. Set `size` appropriately!\n  //\n  // You can also pass a crop object (the crop must already exist).\n\n  apos.util.attachmentUrl = function(file, options) {\n    let path = apos.uploadsUrl + '/attachments/' + file._id + '-' + file.name;\n    if (!options) {\n      options = {};\n    }\n    // NOTE: the crop must actually exist already, you can't just invent them\n    // browser-side without the crop API ever having come into play. If the\n    // width is 0 the user hit save in the cropper without cropping, use\n    // the regular version\n    let crop;\n    if (options.crop && options.crop.width) {\n      crop = options.crop;\n    } else if (file.crop && file.crop.width) {\n      crop = file.crop;\n    }\n    if (crop) {\n      path += '.' + crop.left + '.' + crop.top + '.' + crop.width + '.' + crop.height;\n    }\n    let effectiveSize;\n    if ((!options.size) || (options.size === 'original')) {\n      effectiveSize = false;\n    } else {\n      effectiveSize = options.size;\n    }\n    if (effectiveSize) {\n      path += '.' + effectiveSize;\n    }\n    return path + '.' + file.extension;\n  };\n\n  // Given an asset path such as `/modules/modulename/images/file.png`, this\n  // method will return a URL for it. This is used when frontend JavaScript\n  // code needs to access static assets shipped in the `public` subdirectory of\n  // individual modules. Currently `path` must begin with `/modules/` followed\n  // by a module name; other namespaces may exist later. The remainder of the\n  // path, such as `/images/file.png` in the above example, must currespond\n  // to a file that exists in the `public` subdirectory of the named module.\n  //\n  // Asset paths of this type are also automatically supported by CSS and\n  // SCSS files in the project when using `url()`.\n\n  apos.util.assetUrl = function(path) {\n    return apos.assetBaseUrl + path;\n  };\n\n  // Returns true if the uri references the same site (same host and port) as the\n  // current page. Cross-browser implementation, valid at least back to IE11.\n  // Regarding port numbers, this will match as long as the URIs are consistent\n  // about not explicitly specifying the port number when it is 80 (HTTP) or 443 (HTTPS),\n  // which is generally the case.\n\n  apos.util.sameSite = function(uri) {\n    const matches = uri.match(/^(https?:)?\\/\\/([^/]+)/);\n    if (!matches) {\n      // If URI is not absolute or protocol-relative then it is always same-origin\n      return true;\n    }\n    return window.location.host === matches[2];\n  };\n};\n","import util from './util.js';\nimport http from './http.js';\n\nexport default () => {\n  util();\n  http();\n};\n","export default () => {\n  // Adds the apos.http client, which has the same API\n  // as the server-side apos.http client, although it may\n  // not have exactly the same features available.\n  // This is a lean, IE11-friendly implementation.\n\n  const busyActive = {};\n  const apos = window.apos;\n  apos.http = {};\n\n  // Send a POST request. Note that POST body data should be in\n  // `options.body`. See `apos.http.remote` for details.\n  // You do NOT have to pass a callback unless you must support IE11\n  // and do not want to include a promise polyfill in your build.\n\n  apos.http.post = function(url, options, callback) {\n    return apos.http.remote('POST', url, options, callback);\n  };\n\n  // Send a GET request. Note that query string data may be in\n  // `options.qs`. See `apos.http.remote` for details.\n  // You do NOT have to pass a callback unless you must support IE11\n  // and do not want to include a promise polyfill in your build.\n  apos.http.get = function(url, options, callback) {\n    return apos.http.remote('GET', url, options, callback);\n  };\n\n  // Send a PATCH request. Note that PATCH body data should be in\n  // `options.body`. See `apos.http.remote` for details.\n  // You do NOT have to pass a callback unless you must support IE11\n  // and do not want to include a promise polyfill in your build.\n  apos.http.patch = function(url, options, callback) {\n    return apos.http.remote('PATCH', url, options, callback);\n  };\n\n  // Send a PUT request. Note that PUT body data should be in\n  // `options.body`. See `apos.http.remote` for details.\n  // You do NOT have to pass a callback unless you must support IE11\n  // and do not want to include a promise polyfill in your build.\n  apos.http.put = function(url, options, callback) {\n    return apos.http.remote('PUT', url, options, callback);\n  };\n\n  // Send a DELETE request. See `apos.http.remote` for details.\n  // You do NOT have to pass a callback unless you must support IE11\n  // and do not want to include a promise polyfill in your build.\n  apos.http.delete = function(url, options, callback) {\n    return apos.http.remote('DELETE', url, options, callback);\n  };\n\n  // Send an HTTP request with the given method to the given URL and return the response body.\n  //\n  // The callback is optional as long as Promise support is present in the browser, directly or as\n  // a polyfill. If a callback is used it will receive `(err, result)` where `result` is the\n  // return value described below.\n  //\n  // Accepts the following options:\n  //\n  // `qs` (pass object; builds a query string, does not support recursion)\n  // `send`: by default, `options.body` is sent as JSON if it is an object and it is not a\n  // `FormData` object. If `send` is set to `json`, it is always sent as JSON.\n  // `body` (request body, not for GET; if an object or array, sent as JSON, otherwise sent as-is, unless\n  // the `send` option is set)\n  // `parse` (can be 'json` to always parse the response body as JSON, otherwise the response body is\n  // parsed as JSON only if the content-type is application/json)\n  // `headers` (an object containing header names and values)\n  // `draft` (if true, always add aposMode=draft to the query string, creating one if needed)\n  // `fullResponse` (if true, return an object with `status`, `headers` and `body`\n  // properties, rather than returning the body directly; the individual `headers` are canonicalized\n  // to lowercase names. If there are duplicate headers after canonicalization only the\n  // last value is returned. If a header appears multiple times an array is returned for it)\n  // `downloadProgress` (may be a function accepting `received` and `total` parameters. May never be called. If\n  // called, `received` will be the bytes sent so far, and `total` will be the total bytes to be\n  // received. If the total is unknown, it will be `null`)\n  // `uploadProgress` (may be a function accepting `sent` and `total` parameters. May never be called. If\n  // called, `sent` will be the bytes sent so far, and `total` will be the total bytes to be\n  // sent. If the total is unknown, it will be `null`)\n  // `prefix`: If explicitly set to `false`, do not automatically prefix the URL,\n  // even if the site has a site-wide prefix or locale prefix.\n  // It can become handy when the given url is already prefixed,\n  // which is the case when using the document's computed `_url` field for instance.\n  //\n  // If the status code is >= 400 an error is thrown. The error object will be\n  // similar to a `fullResponse` object, with a `status` property.\n  //\n  // If the URL is site-relative (starts with /) it will be requested from\n  // the apostrophe site itself.\n\n  // Just before the XMLHTTPRequest is sent this method emits an\n  // `apos-before-post` event on `document.body` (where `post` changes\n  // to match the method, in lower case). The event object\n  // has `uri`, `data` and `request` properties. `request` is the\n  // XMLHTTPRequest object. You can use this to set custom headers\n  // on all lean requests, etc.\n\n  apos.http.remote = function(method, url, options, callback) {\n    if (!callback) {\n      if (!window.Promise) {\n        throw new Error('If you wish to receive a promise from apos.http methods in older browsers you must have a Promise polyfill. If you do not want to provide one, pass a callback instead.');\n      }\n      return new window.Promise(function(resolve, reject) {\n        if (!url) {\n          return reject(new Error('url is not defined'));\n        }\n        return apos.http.remote(method, url, options, function(err, result) {\n          if (err) {\n            return reject(err);\n          }\n          return resolve(result);\n        });\n      });\n    }\n\n    if (!url) {\n      return callback(new Error('url is not defined'));\n    }\n\n    if (apos.prefix && options.prefix !== false) {\n      // Prepend the prefix if the URL is absolute:\n      if (url.substring(0, 1) === '/') {\n        url = apos.prefix + url;\n      }\n    }\n\n    let query;\n    let qat;\n\n    // Intentional true / falsey check for determining\n    // what set of docs the request is interested in\n    if (options.draft != null) {\n      if (options.qs) {\n        // Already assumes no query parameters baked into URL, so OK to\n        // just extend qs\n        options.qs = options.draft\n          ? apos.util.assign({ aposMode: 'draft' }, options.qs)\n          : apos.util.assign({ aposMode: 'published' }, options.qs);\n      } else {\n        // Careful, there could be existing query parameters baked into url\n        qat = url.indexOf('?');\n        if (qat !== -1) {\n          query = apos.http.parseQuery(url.substring(qat));\n        } else {\n          query = {};\n        }\n        query.aposMode = options.draft ? 'draft' : 'published';\n        url = apos.http.addQueryToUrl(url, query);\n      }\n    }\n\n    const busyName = options.busy === true ? 'busy' : options.busy;\n    const xmlhttp = new XMLHttpRequest();\n    let data = options.body;\n    let keys;\n    let i;\n\n    if (options.qs) {\n      url = apos.http.addQueryToUrl(url, options.qs);\n    }\n    if (options.busy) {\n      if (!busyActive[busyName]) {\n        busyActive[busyName] = 0;\n        if (apos.bus) {\n          apos.bus.$emit('busy', {\n            active: true,\n            name: busyName\n          });\n        }\n      }\n      // keep track of nested calls\n      busyActive[busyName]++;\n    }\n    xmlhttp.open(method, url);\n    const formData = window.FormData && (data instanceof window.FormData);\n    const sendJson = (options.send === 'json') || (options.body && ((typeof options.body) === 'object') && !formData);\n    if (sendJson) {\n      xmlhttp.setRequestHeader('Content-Type', 'application/json');\n    }\n    if (options.headers) {\n      keys = Object.keys(options.headers);\n      for (i = 0; (i < keys.length); i++) {\n        xmlhttp.setRequestHeader(keys[i], options.headers[keys[i]]);\n      }\n    }\n    apos.util.emit(document.body, 'apos-before-' + method.toLowerCase(), {\n      uri: url,\n      data: options.body,\n      request: xmlhttp\n    });\n    if (sendJson) {\n      data = JSON.stringify(options.body);\n    } else {\n      data = options.body;\n    }\n    xmlhttp.addEventListener('load', function() {\n      let data = null;\n      const responseHeader = this.getResponseHeader('Content-Type');\n      if (responseHeader || (options.parse === 'json')) {\n        if ((options.parse === 'json') || (responseHeader.match(/^application\\/json/))) {\n          try {\n            data = JSON.parse(this.responseText);\n          } catch (e) {\n            return callback(e);\n          }\n        } else {\n          data = this.responseText;\n        }\n      }\n\n      if (xmlhttp.status < 400) {\n        if (options.fullResponse) {\n          return callback(null, {\n            body: data,\n            status: xmlhttp.status,\n            headers: getHeaders()\n          });\n        } else {\n          return callback(null, data);\n        }\n      } else {\n        const error = new Error((data && data.message) || (data && data.name) || 'Error');\n        error.status = xmlhttp.status;\n        error.name = (data && data.name);\n        error.body = data;\n        error.headers = getHeaders();\n        return callback(error);\n      }\n    });\n    xmlhttp.addEventListener('abort', function(evt) {\n      return callback(evt);\n    });\n    xmlhttp.addEventListener('error', function(evt) {\n      return callback(evt);\n    });\n    if (options.downloadProgress) {\n      xmlhttp.addEventListener('progress', function(evt) {\n        options.downloadProgress(evt.loaded, evt.lengthComputable ? evt.total : null);\n      });\n    }\n    if (xmlhttp.upload && options.uploadProgress) {\n      xmlhttp.upload.addEventListener('progress', function(evt) {\n        options.uploadProgress(evt.loaded, evt.lengthComputable ? evt.total : null);\n      });\n    }\n    xmlhttp.addEventListener('loadend', function (evt) {\n      if (options.busy) {\n        busyActive[busyName]--;\n        if (!busyActive[busyName]) {\n          // if no nested calls, disable the \"busy\" state\n          if (apos.bus) {\n            apos.bus.$emit('busy', {\n              active: false,\n              name: busyName\n            });\n          }\n        }\n      }\n    });\n    xmlhttp.send(data);\n\n    function getHeaders() {\n      const headers = xmlhttp.getAllResponseHeaders();\n      if (!headers) {\n        return {};\n      }\n      // Per MDN\n      const arr = headers.trim().split(/[\\r\\n]+/);\n      // Create a map of header names to values\n      const headerMap = {};\n      arr.forEach(function (line) {\n        const parts = line.split(': ');\n        const header = parts.shift();\n        if (!header) {\n          return;\n        }\n        const value = parts.shift();\n        // Optional support for fetching arrays of headers with the same name\n        // could be added at a later time if anyone really cares. Usually\n        // just a source of bugs\n        headerMap[header.toLowerCase()] = value;\n      });\n      return headerMap;\n    }\n  };\n\n  // Parse a query string. You can pass with or without the\n  // leading ?. Don't pass the entire URL. Supports objects,\n  // arrays and nesting with the classic PHP/Java bracket syntax.\n  // If a key is set with no = it is considered null, per\n  // the java convention. Good for use with window.location.search.\n\n  apos.http.parseQuery = function(query) {\n    query = query.replace(/^\\?/, '');\n    const data = {};\n    const pairs = query.split('&');\n    pairs.forEach(function(pair) {\n      let parts;\n      if (pair.indexOf('=') === -1) {\n        patch(pair, null);\n      } else {\n        parts = pair.split('=');\n        if (parts) {\n          patch(parts[0], parts[1]);\n        }\n      }\n    });\n    return data.root || {};\n    function patch(key, value) {\n      let match;\n      let parentKey = 'root';\n      let context = data;\n      key = decodeURIComponent(key);\n      const path = key.split('[');\n      path.forEach(function(subKey) {\n        if (subKey === ']') {\n          if (!Array.isArray(context[parentKey])) {\n            context[parentKey] = [];\n          }\n          context = context[parentKey];\n          parentKey = context.length;\n        } else if (subKey.match(/^\\d+]/)) {\n          match = subKey.match(/^\\d+/);\n          if (!Array.isArray(context[parentKey])) {\n            context[parentKey] = [];\n          }\n          context = context[parentKey];\n          parentKey = parseInt(match);\n        } else {\n          match = subKey.replace(']', '');\n          if (!context[parentKey]) {\n            context[parentKey] = {};\n          }\n          context = context[parentKey];\n          parentKey = match;\n        }\n      });\n      value = (value === null) ? value : decodeURIComponent(value);\n      if (Array.isArray(context[parentKey])) {\n        context[parentKey].push(value);\n      } else if (context[parentKey] !== undefined) {\n        context[parentKey] = [ context[parentKey], value ];\n      } else {\n        context[parentKey] = value;\n      }\n    }\n  };\n\n  // Adds query string data to url. Supports nested structures with objects\n  // and arrays, in a way compatible with qs and most other parsers including\n  // those baked into PHP frameworks etc. If the URL already contains a query\n  // it is discarded and replaced with the new one. All non-query parts of the\n  // URL remain unchanged.\n\n  apos.http.addQueryToUrl = function(url, data) {\n    let hash = '';\n    const hashAt = url.indexOf('#');\n    if (hashAt !== -1) {\n      hash = url.substring(hashAt);\n      url = url.substring(0, hashAt);\n    }\n    url = url.replace(/\\?.*$/, '');\n    let i;\n    let flat;\n    if ((data != null) && ((typeof data) === 'object')) {\n      flat = flatten('', data);\n      for (i = 0; (i < flat.length); i++) {\n        const key = flat[i][0];\n        const val = flat[i][1];\n        if (i > 0) {\n          url += '&';\n        } else {\n          url += '?';\n        }\n        if (val == null) {\n          // Java-style distinction between null and empty string\n          url += encodeURIComponent(key);\n        } else {\n          url += encodeURIComponent(key) + '=' + encodeURIComponent(val);\n        }\n      }\n    }\n    return url + hash;\n    function flatten(path, data) {\n      let flat = [];\n      let keys;\n      let i;\n      if (Array.isArray(data)) {\n        for (i = 0; (i < data.length); i++) {\n          insert(i, data[i]);\n        }\n      } else {\n        keys = Object.keys(data);\n        for (i = 0; (i < keys.length); i++) {\n          insert(keys[i], data[keys[i]]);\n        }\n      }\n      return flat;\n      function insert(key, datum) {\n        if ((datum != null) && ((typeof datum) === 'object')) {\n          flat = flat.concat(flatten(path.length ? path + '[' + key + ']' : key, datum));\n        } else {\n          flat.push([ path.length ? path + '[' + key + ']' : key, datum ]);\n        }\n      }\n    }\n  };\n};\n","/**\n * If the page delivers a logged-out content but we know from session storage that a user is logged-in,\n * we force-refresh the page to bypass the cache, in order to get the logged-in content (with admin UI).\n */\nexport default function() {\n  const isLoggedOutPageContent = !(apos.login && apos.login.user);\n  const isLoggedInCookie = apos.util.getCookie(`${self.apos.shortName}.loggedIn`) === 'true';\n\n  if (!isLoggedOutPageContent || !isLoggedInCookie) {\n    sessionStorage.setItem('aposRefreshedPages', '{}');\n\n    return;\n  }\n\n  const refreshedPages = JSON.parse(sessionStorage.aposRefreshedPages || '{}');\n\n  // Avoid potential refresh loops\n  if (!refreshedPages[location.href]) {\n    refreshedPages[location.href] = true;\n    sessionStorage.setItem('aposRefreshedPages', JSON.stringify(refreshedPages));\n\n    console.info('Received logged-out content from cache while logged-in, refreshing the page');\n\n    location.reload();\n  }\n};\n","export default () => {\n  apos.util.widgetPlayers['@apostrophecms/video'] = {\n    selector: '[data-apos-video-widget]',\n    player: function(el) {\n      const videoUrl = el.getAttribute('data-apos-video-url');\n      let queryResult;\n\n      if (!videoUrl) {\n        return;\n      }\n\n      queryAndPlay(el, {\n        url: videoUrl\n      });\n\n      function queryAndPlay(el, options) {\n        apos.util.removeClass(el, 'apos-oembed-invalid');\n        apos.util.addClass(el, 'apos-oembed-busy');\n        if (!options.url) {\n          return fail('undefined');\n        }\n        return query(options, function(err, result) {\n          queryResult = result;\n          if (err || (options.type && (result.type !== options.type))) {\n            return fail(err || 'inappropriate');\n          }\n          apos.util.removeClass(el, 'apos-oembed-busy');\n          return play(el, result);\n        });\n      }\n\n      function query(options, callback) {\n        const opts = {\n          qs: {\n            url: options.url\n          }\n        };\n        return apos.http.get('/api/v1/@apostrophecms/oembed/query', opts, callback);\n      }\n\n      function play(el, result) {\n        const shaker = document.createElement('div');\n        shaker.innerHTML = result.html;\n        const inner = shaker.firstChild;\n        inner.setAttribute('data-apos-video-canvas', '');\n        el.innerHTML = '';\n        if (!inner) {\n          return;\n        }\n        inner.removeAttribute('width');\n        inner.removeAttribute('height');\n        el.append(inner);\n        // wait for CSS width to be known\n        setTimeout(function() {\n          // If oembed results include width and height we can get the\n          // video aspect ratio right\n          if (result.width && result.height) {\n            inner.style.width = '100%';\n            resizeVideo(inner);\n            // If we need to initially size the video, also resize it on window\n            // resize.\n            window.addEventListener('resize', resizeHandler);\n          } else {\n            // No, so assume the oembed HTML code is responsive.\n          }\n        }, 0);\n      }\n\n      function resizeVideo(canvasEl) {\n        canvasEl.style.height = ((queryResult.height / queryResult.width) * canvasEl.offsetWidth) + 'px';\n      };\n\n      function resizeHandler() {\n        if (document.contains(el)) {\n          resizeVideo(el.querySelector('[data-apos-video-canvas]'));\n        } else {\n          window.removeEventListener('resize', resizeHandler);\n        }\n      }\n\n      function fail(err) {\n        apos.util.removeClass(el, 'apos-oembed-busy');\n        apos.util.addClass(el, 'apos-oembed-invalid');\n        console.error(err);\n        if (err !== 'undefined') {\n          el.innerHTML = '<p>Error loading video</p>';\n        } else {\n          el.innerHTML = '';\n        }\n      }\n    }\n  };\n};\n"],"names":["window","apos","data","document","body","getAttribute","Object","assign","JSON","parse","removeAttribute","modules","module","values","alias","util","emit","el","name","event","CustomEvent","e","createEvent","initEvent","dispatchEvent","getCookie","match","cookie","RegExp","removeClass","className","classList","remove","replace","split","join","addClass","add","closest","selector","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","s","this","documentElement","contains","parentElement","parentNode","nodeType","obj1","obj2","apply","arguments","i","j","keys","key","length","widgetPlayers","onReadyAndRefresh","fn","readyState","setTimeout","addEventListener","attachEvent","onReady","bus","$on","bind","runPlayers","players","playerList","playerOpts","querySelectorAll","forEach","aposWidgetPlayed","player","attachmentUrl","file","options","crop","effectiveSize","path","uploadsUrl","_id","width","left","top","height","size","extension","assetUrl","assetBaseUrl","sameSite","uri","location","host","busyActive","http","post","url","callback","remote","get","patch","put","delete","method","Promise","Error","resolve","reject","err","result","query","qat","prefix","substring","draft","qs","aposMode","indexOf","parseQuery","addQueryToUrl","busyName","busy","xmlhttp","XMLHttpRequest","$emit","active","open","formData","FormData","sendJson","send","setRequestHeader","headers","getHeaders","getAllResponseHeaders","arr","trim","headerMap","line","parts","header","shift","value","toLowerCase","request","stringify","responseHeader","getResponseHeader","responseText","status","fullResponse","error","message","evt","downloadProgress","loaded","lengthComputable","total","upload","uploadProgress","pair","root","parentKey","context","decodeURIComponent","subKey","Array","isArray","parseInt","push","undefined","hash","hashAt","flat","flatten","insert","datum","concat","val","encodeURIComponent","isLoggedOutPageContent","login","user","isLoggedInCookie","self","shortName","sessionStorage","setItem","refreshedPages","aposRefreshedPages","href","console","info","reload","videoUrl","queryResult","resizeVideo","canvasEl","style","offsetWidth","resizeHandler","querySelector","removeEventListener","fail","innerHTML","opts","type","shaker","createElement","html","inner","firstChild","setAttribute","append","play","queryAndPlay"],"sourceRoot":""}